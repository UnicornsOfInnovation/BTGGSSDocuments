Word,Count
*,570
the,433
,200
to,113
-,109
of,71
(Dave),69
database,57
is,57
2016,57
Purpose:,52
by,52
@param:,51
if,51
October,43
error,41
in,40
@return:,38
account,35
that,35
Dave,31
B,31
Baclayon,31
History:,31
Christian,31
list,31
Development,31
Developer:,30
@return,30
be,30
jsonObject,30
key,29
from,29
created,29
and,28
for,27
all,26
=,26
version,25
Main,25
holds,24
called,24
it,23
file,23
a,23
will,22
there,21
passed,20
details,20
used,20
message,19
AccountDto,19
are,19
JSONObject,19
new,19
student,19
response,18
function,18
course,18
Created,17
It,17
client,16
json,16
an,16
errors,16
November,15
accounts,14
when,14
\18,\,14
any,14
Receives,14
ID,14
grade,13
Service,13
object,13
calling,12
model,12
or,12
calls,11
Sets,11
@param,11
complete,11
Gets,11
void,10
Returns,10
return,10
hold,10
File,10
none,10
AccountModel,9
\23,\,9
\22,\,9
CourseDto,9
Error,9
add,9
},9
set,9
stores,9
checking,8
CourseModel,8
occurs,8
Checks,8
exception,8
(stores,8
\25,\,8
as,8
grades,8
added,8
If,8
strand,7
{,7
depending,7
this,7
on,7
This,7
courses,7
teacher,6
send,6
retrieve,6
store,6
not,6
setting,6
insert,6
datastore,6
Adds,6
GradeModel,6
front-end,6
array,6
************************************************************,6
initialize,6
dao,6
back,6
type,6
\exists,\,6
//,6
attribute,6
JS,6
exists,6
inserting,5
entry,5
\},\,5
containing,5
update,5
\"\slim3-gen"\,\,5
singleton,5
date,5
updated,5
@javax.annotation.Generated(value,5
with,5
\"\@VERSION@"\\,5
\"\2016-12-06\,5
Course,5
check,5
\json.put("\pageToRedirect"\,\,4
EMAIL,4
dto,4
already,4
null;,4
\this.response.setContentType("\application/json"\);\,4
HERE,4
'key',4
entity,4
courseID,4
deleted,4
successful,4
PUT,4
Controller,4
unique,4
creating,4
soft,4
username,4
then,4
code,4
String,4
'id',4
JSONObject();,4
this.response.getWriter().write(json.toString());,4
ADDRESS,4
status,4
methods,3
each,3
datastore),3
command,3
\insertCourse(),\,3
GradeDto,3
\deleteCourse(),\,3
Inserts,3
units,3
Function,3
\19:24:52"\)\,3
&&,3
happen,3
List<AccountModel>,3
\"\action"\\,3
\15,\,3
creation,3
\updateCourse(),\,3
Name,3
action,3
adding,3
upon,3
password,3
\12,\,3
getCourseById(),3
item,3
method,3
\24,\,3
Navigation,3
unable,3
\insertStrand(),\,3
Add,3
delete,3
Updates,3
Different,3
Retrieves,3
getAllTeacherAccounts(),3
no,3
List<GradeModel>,3
JSONArray,3
$http.post(),3
COMMENTS,3
The,3
\19,\,3
contains,3
GPA,3
functions,3
returning,3
Getting,3
received,3
getCourseByName(Dave),2
\insertGrade(),\,2
Global,2
\SessionManager.createSession(request,\,2
by:,2
cmd,2
List<CourseDto>,2
session,2
e){,2
Transfers,2
deleteAccount,2
\"\admin"\);\,2
fields,2
logoutString,2
getStudentsByStrand(),2
AccountService,2
Computing,2
BestStudentDto,2
getAccountByUsernamePassword(),2
List<AccountDto>,2
\"\\,2
prints,2
\username,\,2
'accountService.computeGPA(gradesArray);',2
0.01,2
nothing,2
side,2
exceptions,2
Link,2
messages,2
getAllStrands(),2
data,2
getAccountById(),2
same,2
\30,\,2
\run(),\,2
getAllCoursesByStrand(),2
try{,2
Dto,2
\17,\,2
yet,2
students,2
courseId,2
insertAccount,2
GRADE,2
major,2
THIS,2
Peter,2
address,2
\unique,\,2
catch(Exception,2
computeGPA(),2
gpa,2
ANG,2
one,2
StrandModel,2
errorList,2
\insertAccount(),\,2
catch,2
\out"\);\,2
Clark,2
Used,2
org.slim3.controller.Controller#run(),2
DTO,2
\successful,\,2
getAllCourses,2
RegisterBentoController,2
LINKS,2
Rococo,2
@see,2
getAllGradesByAccountId(),2
given,2
\26,\,2
element,2
getAllCourses(),2
\"\company"\);\,2
+,2
objects,2
above,2
setters,2
everything,2
email,2
\System.out.println("\2"\);\,2
AccountDao,2
JSON,2
These,2
\System.out.println(this.getClass().getSimpleName()+"\\,2
DAO,2
sample,2
retrieved,2
false,2
isValid,2
05_Quiz_Output,2
\deleteAccount(),\,2
stored,2
Guisadio,2
getGradeByAccountAndCourse(),2
updateAccount,2
sa,2
StrandDto,2
getters,2
best,2
SA,2
Model,2
Deletes,2
}else,2
reference,2
2015,2
--------------------------------------------------------------------------------,2
\updateAccount(),\,2
field,2
AccountId,2
(non-Javadoc),2
–,2
accountDto,1
LATER,1
total,1
Adding,1
Class,1
consistencies,1
getAllStudentGradesByCourse(),1
System.out.println(password);,1
CompanyService,1
\request.getSession().getAttribute("\accntType"\));\,1
COMMENT,1
submits,1
(C),1
know,1
==,1
\START"\);\,1
Address,1
(Exception,1
change,1
History,1
Dao,1
\file,\,1
updateGrade(),1
\bestStudentDto.setLastName(jsonObject.getString("\courseName"\));\,1
!=,1
\"\end"\\,1
import,1
BE,1
Content,1
CompanyDto,1
access,1
assumed,1
UNSA,1
||,1
wrong,1
Proprietary,1
\jsonObject.getString("\password"\);\,1
\password."\);\,1
TO,1
\deleteAccountController(),\,1
company,1
Get,1
e),1
bestStudentDto.addError(e.toString());,1
\System.out.println("\Logging\,1
getAllTeacherAccounts,1
Copyright,1
submitted,1
exist,1
\bestStudentDto.setStatus(jsonObject.getString("\courseName"\));\,1
bestStudentDtoList.add(bestStudentDto);,1
2,1
\bestStudentDto.setCourseName(jsonObject.getString("\courseName"\));\,1
duplicate,1
condition,1
\getAllStudentAccounts(),\,1
Objects,1
try,1
accountDto;,1
getAccountById,1
StudentController,1
\getGradeById(),\,1
getAccountByIdController(),1
gi,1
GradeDao,1
SABUTI,1
\updateGrade(),\,1
System.out.println(e.toString());,1
Nawng,1
//if,1
\bestStudentDto.setFirstName(jsonObject.getString("\courseName"\));\,1
GradeService,1
changePasswordController(),1
Average,1
user,1
\updateGradeController(),\,1
boolean,1
Storing,1
log,1
Data,1
updateGradeController,1
REDIRECT,1
Version,1
BestStudentService,1
\nothing,\,1
\System.out.println("\no\,1
List<CourseModel>,1
RETURNED,1
NI,1
\updateAccountController(),\,1
every,1
SessionManager.destroySession(request);,1
submitGradeController,1
Technologies,1
\bestStudentDto.setAccountId(Long.parseLong(jsonObject.getString("\accountId"\)));\,1
Create,1
Octover,1
BestStudentController,1
duplicates,1
initialization,1
e.printStackTrace();,1
ERRORS,1
computeGPA,1
password);,1
accountService.computeGPA(gradesArray.getJSONObject(ctr));,1
handling,1
getAllGrades(),1
codes,1
\"\start"\\,1
\getAllGradesByCourse(),\,1
companyDto.setPassword(password);,1
@author,1
GradeController,1
\bestStudentDto.setGrade(jsonObject.getString("\courseName"\));\,1
SessionManager,1
Rights,1
IMPLEMENT,1
yearLevel,1
because,1
BestStudentDao,1
StrandDao,1
id,1
(true,1
budget.jsp,1
IMO,1
INDENTATION,1
public,1
BestStudentModel,1
weight,1
accountId,1
KUNG,1
getStudentsByStrandController(),1
FUNCTION,1
CHANGE,1
\logoutString.equals("\logout"\)){\,1
ang,1
getCourseByName(),1
\bestStudentDto.setGradeId(Long.parseLong(jsonObject.getString("\gradeId"\)));\,1
page,1
getAllStudentAccounts,1
All,1
//TODO:,1
CompanyService();,1
submit,1
\System.out.println("\1"\);\,1
Initial,1
JSONObject(this.request.getReader().readLine());,1
getAllStudentGradesByCourseController(),1
initial,1
updating,1
companyDto.setEmailAddress(username);,1
bestStudentController.insertBestStudentController(jsonObject);,1
\forward("\/html/Login.html"\);\,1
GIKAN,1
List<StudentGradeDto>,1
getCourseById,1
Point,1
\END"\);\,1
\System.out.println("\Go\,1
\submitGradeController(),\,1
System.out.println(username,1
emailAddress),1
CompanyDto();,1
MAPLANNED,1
Traverse,1
recompute,1
below,1
\back"\);\,1
do,1
\"\Wrong\,1
prohibited,1
GlobalConstands,1
Unauthorized,1
\null,\,1
\request.getSession().getAttribute("\accntType"\).equals("\company"\))){\,1
if(SessionManager.isSessionExist(request)==true,1
Plan:,1
modified,1
WTIH,1
Developed,1
TEACHER,1
Access,1
LoginController,1
MODEL,1
queried,1
companyService.validateUsernamePassword(companyDto);,1
strictly,1
StrandService,1
[05/07/2015],1
general,1
name,1
doesn't,1
\21,\,1
computes,1
FOLLOWING:,1
\System.out.println("\3"\);\,1
\19:24:53"\)\,1
OBJECT,1
Grade,1
\json.put("\errorMsg"\,\,1
\insertAccountController(),\,1
if(null,1
missing,1
\bestStudentDto.setId(jsonObject.getString("\courseName"\));\,1
CourseId,1
StrandController,1
btg.session.SessionManager;,1
after,1
\"\/budget"\;\,1
medium,1
FORWARD,1
getAccountByUsername(),1
static,1
well,1
Base,1
Modified,1
A,1
Email,1
duha,1
IPASS,1
PARA,1
comments,1
getAccountByEmailAddress(),1
@version,1
\jsonObject.getString("\username"\);\,1
\set."\);\,1
via,1
isValid){,1
Reserved,1
akong,1
\if(jsonObject.isNull("\username"\)){\,1
purpose,1
ARRANGE,1
System.out.println(username);,1
confidential,1
Clears,1
\"\admin"\.equals(password)){\,1
Server,1
NOT,1
\Technologies,\,1
existing,1
2016-,1
statements,1
ADI,1
Prefix,1
NGA,1
false;,1
1,1
CourseController,1
\19:24:51"\)\,1
NINYO,1
\if("\admin"\.equals(username)\,1
}else{,1
conventions,1
Type,1
getAllStrandS(),1
getAllStudentAccounts(),1
List,1
database/datastore,1
bestStudentDto,1
\"\"\);\,1
courses),1
returns,1
admin,1
ahahahahaha,1
AccountDto();,1
\request.getParameter("\logout"\);\,1
final,1
Inc,1
\(request.getSession().getAttribute("\accntType"\).equals("\admin"\)\,1
COMMON,1
OUT,1
Id,1
getAllCoursesController(),1
copying,1
\System.out.println("\Return\,1
\bestStudentDto.setCourseId(Long.parseLong(jsonObject.getString("\courseId"\)));\,1
SYS_REDIRECT_BUDGET_LIST,1
companyDto,1
budget,1
TODO:,1
companyService,1
