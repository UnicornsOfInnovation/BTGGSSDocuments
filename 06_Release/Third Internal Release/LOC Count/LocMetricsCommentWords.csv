Word,Count
*,580
the,444
,203
to,116
-,110
of,73
(Dave),70
2016,58
database,58
is,57
by,52
if,52
Purpose:,52
@param:,51
October,44
error,43
in,40
@return:,38
that,36
account,35
B,32
Dave,32
Baclayon,32
Christian,32
History:,32
Development,32
list,31
Developer:,31
be,31
and,31
key,30
@return,30
jsonObject,30
created,30
from,29
for,29
=,27
all,26
Main,26
version,25
called,24
holds,24
file,24
will,23
a,23
it,23
there,22
new,21
passed,21
message,21
response,21
used,20
AccountDto,20
student,20
details,20
JSONObject,19
are,19
course,18
function,18
json,18
an,17
It,17
Created,17
client,16
errors,16
ID,15
object,15
November,15
\18,\,14
any,14
Receives,14
accounts,14
when,14
grade,13
model,13
Service,13
calling,12
or,12
},11
complete,11
File,11
@param,11
Sets,11
calls,11
Gets,11
Returns,10
\22,\,10
return,10
add,10
hold,10
set,10
none,10
void,10
AccountModel,9
Error,9
stores,9
CourseDto,9
as,9
\23,\,9
{,9
added,8
Checks,8
exception,8
CourseModel,8
occurs,8
grades,8
(stores,8
\25,\,8
If,8
checking,8
exists,7
send,7
depending,7
this,7
back,7
JS,7
courses,7
setting,7
type,7
datastore,7
Adds,7
on,7
initialize,7
This,7
strand,7
store,6
retrieve,6
************************************************************,6
//,6
insert,6
\exists,\,6
front-end,6
array,6
dao,6
teacher,6
not,6
GradeModel,6
attribute,6
inserting,5
PUT,5
'key',5
\"\2017-01-02\,5
updated,5
creating,5
entity,5
date,5
\},\,5
'id',5
@javax.annotation.Generated(value,5
update,5
\"\slim3-gen"\,\,5
with,5
check,5
\14:00:30"\)\,5
Course,5
containing,5
HERE,5
\"\@VERSION@"\\,5
entry,5
singleton,5
deleted,4
successful,4
String,4
soft,4
already,4
ADDRESS,4
SA,4
status,4
ANG,4
dto,4
null;,4
Name,4
then,4
unique,4
EMAIL,4
username,4
JSONObject();,4
COMMENTS,4
courseID,4
\json.put("\pageToRedirect"\,\,4
code,4
this.response.getWriter().write(json.toString());,4
adding,4
item,4
\this.response.setContentType("\application/json"\);\,4
sa,4
Controller,4
best,3
functions,3
\insertCourse(),\,3
units,3
Function,3
unable,3
contains,3
happen,3
\19,\,3
each,3
The,3
(non-Javadoc),3
no,3
getAllTeacherAccounts(),3
\updateCourse(),\,3
datastore),3
upon,3
\12,\,3
&&,3
creation,3
getCourseById(),3
GPA,3
Add,3
password,3
JSONArray,3
\insertStrand(),\,3
\"\action"\\,3
returning,3
methods,3
Retrieves,3
GradeDto,3
List<AccountModel>,3
$http.post(),3
action,3
Navigation,3
catch,3
returns,3
Updates,3
delete,3
\24,\,3
Different,3
method,3
org.slim3.controller.Controller#run(),3
JSON,3
THIS,3
\15,\,3
List<GradeModel>,3
command,3
received,3
@see,3
\deleteCourse(),\,3
Getting,3
BestStudentDto,3
Inserts,3
DTO,2
session,2
nothing,2
fields,2
\successful,\,2
\bestStudentDto.setCourseId(Long.parseLong(jsonObject.getString("\courseId"\)));\,2
\"\company"\);\,2
Clark,2
OUT,2
\bestStudentDto.setFirstName(jsonObject.getString("\courseName"\));\,2
\run(),\,2
\SessionManager.createSession(request,\,2
prints,2
retrieved,2
Global,2
Transfers,2
GIKAN,2
conventions,2
NINYO,2
exceptions,2
FOLLOWING:,2
\unique,\,2
getters,2
accountDto;,2
try,2
0.01,2
Guisadio,2
getAllCoursesByStrand(),2
try{,2
stored,2
\17,\,2
List<AccountDto>,2
messages,2
courseId,2
insertAccount,2
by:,2
getCourseByName(Dave),2
cmd,2
\bestStudentDto.setCourseName(jsonObject.getString("\courseName"\));\,2
address,2
2,2
bestStudentDtoList.add(bestStudentDto);,2
logoutString,2
\bestStudentDto.setId(jsonObject.getString("\courseName"\));\,2
\System.out.println("\2"\);\,2
one,2
\bestStudentDto.setStatus(jsonObject.getString("\courseName"\));\,2
element,2
isValid,2
objects,2
\out"\);\,2
AccountDto();,2
--------------------------------------------------------------------------------,2
OBJECT,2
getAccountByUsernamePassword(),2
getAllCourses,2
\deleteAccount(),\,2
email,2
errorList,2
e),2
TEACHER,2
NI,2
\bestStudentDto.setGradeId(Long.parseLong(jsonObject.getString("\gradeId"\)));\,2
major,2
Dto,2
Link,2
MAPLANNED,2
getStudentsByStrand(),2
deleteAccount,2
e){,2
UNSA,2
everything,2
getAllStrands(),2
\"\admin"\);\,2
FUNCTION,2
These,2
\insertAccount(),\,2
KUNG,2
setters,2
yet,2
AccountService,2
catch(Exception,2
'accountService.computeGPA(gradesArray);',2
updateAccount,2
(Exception,2
1,2
IMO,2
\30,\,2
data,2
\bestStudentDto.setGrade(jsonObject.getString("\courseName"\));\,2
StrandDto,2
IPASS,2
NGA,2
getAllGradesByAccountId(),2
ADI,2
computeGPA(),2
DAO,2
LINKS,2
IMPLEMENT,2
getAllCourses(),2
sample,2
AccountDao,2
consistencies,2
\bestStudentDto.setAccountId(Long.parseLong(jsonObject.getString("\accountId"\)));\,2
LATER,2
accountDto,2
above,2
gpa,2
StrandModel,2
05_Quiz_Output,2
AccountId,2
\updateAccount(),\,2
false,2
reference,2
Model,2
PARA,2
}else,2
\insertGrade(),\,2
Deletes,2
List<CourseDto>,2
–,2
Computing,2
getGradeByAccountAndCourse(),2
Nawng,2
SABUTI,2
\username,\,2
BestStudentController,2
side,2
\bestStudentDto.setLastName(jsonObject.getString("\courseName"\));\,2
\System.out.println(this.getClass().getSimpleName()+"\\,2
getAccountById(),2
same,2
field,2
students,2
GRADE,2
Peter,2
2015,2
Used,2
+,2
RegisterBentoController,2
bestStudentDto.addError(e.toString());,2
\"\\,2
\26,\,2
Rococo,2
given,2
\deleteAccountController(),\,1
Get,1
TO,1
\jsonObject.getString("\username"\);\,1
wrong,1
getAllTeacherAccounts,1
e.printStackTrace();,1
assumed,1
exist,1
ERRORS,1
password);,1
\set."\);\,1
access,1
initialization,1
Content,1
BE,1
via,1
duplicates,1
\"\end"\\,1
accountService.computeGPA(gradesArray.getJSONObject(ctr));,1
StudentController,1
@version,1
handling,1
@author,1
Dao,1
bestStudentDto.setBestStudentId(null);,1
\updateGrade(),\,1
System.out.println(e.toString());,1
getAccountByEmailAddress(),1
LoginController,1
GradeController,1
GradeService,1
isValid){,1
comments,1
==,1
know,1
boolean,1
(C),1
confidential,1
Data,1
updateGradeController,1
REDIRECT,1
SessionManager,1
BestStudentService,1
\nothing,\,1
NOT,1
submits,1
RETURNED,1
user,1
System.out.println(password);,1
Adding,1
SessionManager.destroySession(request);,1
total,1
Create,1
Class,1
Rights,1
Octover,1
Technologies,1
getAllStudentGradesByCourse(),1
Developed,1
StrandService,1
CompanyService,1
computeGPA,1
modified,1
2016-,1
[05/07/2015],1
getAllGrades(),1
codes,1
\"\start"\\,1
\getAllGradesByCourse(),\,1
companyDto.setPassword(password);,1
\request.getSession().getAttribute("\accntType"\));\,1
submitGradeController,1
COMMENT,1
if(SessionManager.isSessionExist(request)==true,1
yearLevel,1
\START"\);\,1
because,1
every,1
BestStudentDao,1
StrandDao,1
id,1
(true,1
budget.jsp,1
Email,1
INDENTATION,1
public,1
BestStudentModel,1
weight,1
Address,1
change,1
getStudentsByStrandController(),1
\null,\,1
CHANGE,1
Modified,1
accountId,1
History,1
\file,\,1
updateGrade(),1
Unauthorized,1
!=,1
Base,1
companyService,1
submit,1
\System.out.println("\1"\);\,1
Initial,1
JSONObject(this.request.getReader().readLine());,1
getAllStudentGradesByCourseController(),1
initial,1
CompanyDto,1
companyDto.setEmailAddress(username);,1
bestStudentController.insertBestStudentController(jsonObject);,1
\updateAccountController(),\,1
\if("\admin"\.equals(username)\,1
well,1
\logoutString.equals("\logout"\)){\,1
}else{,1
\END"\);\,1
||,1
\submitGradeController(),\,1
System.out.println(username,1
ang,1
CompanyDto();,1
Proprietary,1
Traverse,1
recompute,1
Type,1
\back"\);\,1
do,1
\"\Wrong\,1
getCourseByName(),1
GlobalConstands,1
\jsonObject.getString("\password"\);\,1
\password."\);\,1
\request.getSession().getAttribute("\accntType"\).equals("\company"\))){\,1
company,1
Plan:,1
getAllStrandS(),1
WTIH,1
getAllStudentAccounts(),1
getAccountByUsername(),1
Access,1
\"\/budget"\;\,1
MODEL,1
queried,1
companyService.validateUsernamePassword(companyDto);,1
strictly,1
\System.out.println("\Logging\,1
after,1
general,1
List,1
page,1
\21,\,1
getAllStudentAccounts,1
List<CourseModel>,1
\System.out.println("\3"\);\,1
\System.out.println("\no\,1
Copyright,1
All,1
Version,1
if(null,1
submitted,1
prohibited,1
CourseId,1
bestStudentModel.setBestStudentId(inputBestStudent.getBestStudentId());,1
\request.getParameter("\logout"\);\,1
btg.session.SessionManager;,1
name,1
StrandController,1
medium,1
FORWARD,1
log,1
static,1
//TODO:,1
final,1
missing,1
A,1
duplicate,1
CompanyService();,1
duha,1
condition,1
\getAllStudentAccounts(),\,1
\insertAccountController(),\,1
\json.put("\errorMsg"\,\,1
studentGradeDtoList,1
Objects,1
below,1
Inc,1
updating,1
Reserved,1
akong,1
\if(jsonObject.isNull("\username"\)){\,1
purpose,1
ARRANGE,1
System.out.println(username);,1
Grade,1
Clears,1
\"\admin"\.equals(password)){\,1
Server,1
\Technologies,\,1
existing,1
\forward("\/html/Login.html"\);\,1
statements,1
\(request.getSession().getAttribute("\accntType"\).equals("\admin"\)\,1
Prefix,1
Storing,1
false;,1
getAccountById,1
CourseController,1
computes,1
COMMON,1
Id,1
\getGradeById(),\,1
getAccountByIdController(),1
gi,1
getAllCoursesController(),1
List<StudentGradeDto>,1
database/datastore,1
bestStudentDto,1
\"\"\);\,1
courses),1
companyDto,1
admin,1
ahahahahaha,1
GradeDao,1
budget,1
getCourseById,1
Point,1
//if,1
changePasswordController(),1
Average,1
\updateGradeController(),\,1
copying,1
\System.out.println("\Return\,1
doesn't,1
SYS_REDIRECT_BUDGET_LIST,1
\System.out.println("\Go\,1
import,1
emailAddress),1
TODO:,1
gradeDtoList,1
